import re

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.types import ReplyKeyboardRemove

from filters.is_phone import IsPhone
from keyboards.default.send_by_apartment import kb_yes_or_no
from loader import dp
from sql.sql_query import SqlQuery
from states import SystemState


@dp.message_handler(Text(equals='–ê–≥–µ–Ω—Ç'), state=SystemState.UserDelete)
async def delete_start(message: types.Message):
    await message.answer('üî¥üî¥üî¥ –í–Ω–∏–º–∞–Ω–∏–µ.\n–ë—É–¥—å—Ç–µ –æ—á–µ–Ω—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏!')
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è \n—É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —É–¥–∞–ª–∏—Ç—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.')
    await SystemState.UserDeleteAgent_Q1.set()


@dp.message_handler(IsPhone(), state=SystemState.UserDeleteAgent_Q1)
async def search_by_number(message: types.Message, state=FSMContext):
    phone_number = message.text.strip()
    # –ü–æ–ª—É—á–∞–µ–º —Å –ø–æ–º–æ—â—å—é —Ä–µ–≥—É–ª—è—Ä–Ω–æ–≥–æ –≤—ã—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞
    decor_number = re.findall(r'\d+', phone_number)
    # –ü–æ–ª—É—á–∞–µ–º 9 —á–∏—Å–µ–ª —Å –ø—Ä–∞–≤–æ–π —Å—Ç–æ—Ä–æ–Ω—ã
    decor_number = int(''.join(decor_number)[-9:])
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã 998
    decor_number = '998' + str(decor_number)

    await state.update_data(var_delete_phone=decor_number)

    search_phone_to_db = SqlQuery().get_row(table_name='agents',
                                            search_param=[
                                                f"phone = '{decor_number}'"
                                            ])

    if search_phone_to_db:
        search_phone_to_db = search_phone_to_db[0]
        await state.update_data(db_value=search_phone_to_db)
        await message.answer(f'–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —ç—Ç–æ–º—É –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞:  <b>{decor_number}</b>')

        await message.answer(f'–ò–º—è:  <code>{search_phone_to_db[2].title()}</code>\n'
                             f'–§–∞–º–∏–ª–∏—è:  <code>{search_phone_to_db[3].title()}</code>\n'
                             f'–û—Ç—á–µ—Å—Ç–≤–æ:  <code>{search_phone_to_db[4].title()}</code>\n'
                             f'–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:  <code>{search_phone_to_db[5]}</code>\n'
                             f'–ú–µ—Å—Ç–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è:  <code>{search_phone_to_db[7]}</code>\n'
                             f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:  <code>{search_phone_to_db[6]}</code>\n'
                             f'–¢–µ–ª–µ–≥—Ä–∞–º ID:  <code>{search_phone_to_db[1]}</code>\n'
                             f'–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å:  <code>{search_phone_to_db[8].title()}</code>\n'
                             f'–†–∞–Ω–≥:  <code>{search_phone_to_db[9].title()}</code>\n'
                             f'–£—á–∞—Å—Ç–æ–∫:  <code>{search_phone_to_db[10]}</code>\n')

        await message.answer('–í—ã —É–≤–µ—Ä–µ–Ω—ã —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?',
                             reply_markup=kb_yes_or_no)

        await SystemState.UserDeleteAgent_Q2.set()
    else:
        await message.answer(f'–î–∞–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞: <b>{decor_number}</b> –Ω–µ—Ç—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
        await message.answer(f'<b>–í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n'
                             f'–ò–ª–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–∞–≤ –Ω–∞ –∫–æ–º–∞–Ω–¥—É /system', reply_markup=ReplyKeyboardRemove())


@dp.message_handler(state=SystemState.UserDeleteAgent_Q2)
async def delete_agent_to_db(message: types.Message, state=FSMContext):
    values = await state.get_data()
    del_phone = values['var_delete_phone']
    if message.text.strip().lower() == '–¥–∞':
        SqlQuery().delete_row(table_name='agents',
                              search_column_name='phone',
                              search_value=del_phone,
                              )
        await message.answer('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω')
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ <b>–ø–∞—Ä–æ–ª—å</b> —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ...', reply_markup=ReplyKeyboardRemove())
        await SystemState.Start.set()
    elif message.text.strip().lower() == '–Ω–µ—Ç':
        await message.answer('–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ')
        await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ <b>–ø–∞—Ä–æ–ª—å</b> —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å ...', reply_markup=ReplyKeyboardRemove())
        await SystemState.Start.set()
    else:
        await message.answer('–í—ã –≤–≤–µ–ª–∏ –Ω–µ –≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ!\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
